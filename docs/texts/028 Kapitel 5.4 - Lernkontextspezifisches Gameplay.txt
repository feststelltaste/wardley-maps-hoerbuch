Kapitel 5.4.: Lernkontextspezifisches Gameplay

     * Kontextspezifisches Spiel: Beschleuniger, Verzögerer und Zwänge*

   Ich verstand, dass sich alles aufgrund von Wettbewerb entwickelt und hatte jede Menge Beweise, um vergangene Beispiele von der Elektrizität bis zu Schrauben und Muttern zu zeigen. Die Frage war, konnte ich das irgendwie beeinflussen? Zufälligerweise waren wir seit den frühen Tagen des Jahres 2001 nicht nur Nutzer von Open Source, sondern auch Mitwirkende. Wir unterstützten die Sprache Perl und viele andere Open-Source-Projekte

   Ich hatte diese absichtlich als fruchtbare Jagdgründe genutzt, um mein erstaunliches Team während der Jahre 2002-2005 zu rekrutieren. Aber ich hatte auch beobachtet, wie Open-Source-Bemühungen durch die Zusammenarbeit mit anderen eine erstaunliche Technologie hervorgebracht hatten, die die proprietären Bemühungen in vielen Bereichen übertraf. In vielen Fällen wurde Open-Source-Technologie zum De-facto-Standard und sogar zur Standardware in einem Bereich. Es schien, dass allein der Akt des Open-Sourcing, wenn eine ausreichend starke Gemeinschaft geschaffen werden konnte, ein einst magisches Wunder dazu bringen würde, ein Gebrauchsgegenstand zu werden. Open Source schien den Wettbewerb zu beschleunigen, egal in welchem Bereich es eingesetzt wurde

   Ich hatte auch miterlebt, wie Gegenkräfte wie Angst, Unsicherheit und Zweifel existierten. Dies wurde oft von Anbietern auf Open-Source-Projekte angewandt, um andere abzuschrecken, indem sie die Trägheit, sich zu ändern, verstärkten. Open-Source-Projekten wurde stets vorgeworfen, sie seien nicht sicher, offen für Hacker (als ob das eine Form der Beleidigung wäre), von zweifelhafter Herkunft und ein Risiko zu sein. Für uns und die Millionen von Nutzern, die unsere Dienste in Anspruch nahmen, waren sie jedoch ein wesentliches Puzzlestück. Zufällig hatten die verschiedenen Kämpfe um Open Source mein Bewusstsein für geistiges Eigentum geschärft. Ich wurde mir bewusst, wie Patente regelmäßig zur Umzäunung verwendet wurden, um einen Konkurrenten an der Entwicklung eines Produkts zu hindern. Das war die Antithese zum Wettbewerb und es war erdrückend. Ich begann, mir eine Meinung darüber zu bilden, dass bestimmte Maßnahmen den Wettbewerb beschleunigen und eine Komponente in Richtung einer
   Massenware treiben würden, während andere dazu benutzt werden könnten, ihre Entwicklung zu verlangsamen. Die Landschaft konnte manipuliert werden

   Gleichzeitig hatte ich festgestellt, dass es mit zunehmender Industrialisierung bestimmter Tätigkeiten und damit zunehmender Verbreitung oft schwierig wurde, Mitarbeiter mit den richtigen Fähigkeiten zu finden, oder es gab Engpässe bei den zugrunde liegenden Komponenten. Die Entwicklung einer Komponente konnte also durch eine Komponente eingeschränkt werden, von der sie abhing, wie z. B. Wissen. Ich habe diese Punkte in Abbildung 54 zusammengefasst, indem ich sie auf unsere erste Karte angewendet habe
Siehe    Abbildung 54: Beschleuniger, Verzögerer und Beschränkungen für mehr Details.
     * Punkt 1* - die Evolution einer Komponente kann durch einen offenen Ansatz, sei es Open Source oder Open Data, beschleunigt werden
     * Punkt 2* - die Evolution einer Komponente kann durch den Einsatz von Angst, Unsicherheit und Zweifel beim Überschreiten einer Trägheitsbarriere oder durch den Einsatz von Patenten zur Umzäunung einer Technologie verlangsamt werden
     * Punkt 3* - die Entwicklung einer Komponente kann durch Einschränkungen in den zugrundeliegenden Komponenten beeinflusst werden, z. B. würde die Umwandlung von Compute in eine Utility potenziell zu einem schnellen Anstieg der Nachfrage führen (aufgrund neuer, noch nicht erfasster Komponenten, die darauf aufbauen, oder des Long-Tail unerfüllter Geschäftsbedürfnisse), aber dies erfordert den Bau von Rechenzentren. Während die Bereitstellung von virtuellen Maschinen schnell erfolgen könnte, ist dies beim Bau von Rechenzentren nicht der Fall

   Ich begann, die Karte weiter zu erkunden und nach anderen Möglichkeiten zu suchen, die wir ausnutzen konnten
     * Kontextspezifisches Spiel: Innovation, Hebelwirkung und Kommoditisierung*

   Mir wurde schon oft gesagt, dass es besser ist, ein Fast Follower zu sein als ein First Mover. Aber ist das wahr? Die Verwendung der Karte erzählte mir eine etwas komplexere Geschichte. Sicherlich gab es bei der Erforschung eines unerforschten Raums eine Menge Unsicherheit und enorme Kosten für Forschung und Entwicklung. Aber Forscher und Unternehmen kreierten ständig neue Dinge und so gab es auch Kosten für die Entdeckung dieser neuen erfolgreichen Sache in all dem Lärm. Wir würden nicht das einzige Unternehmen sein, das dieses Spiel zu spielen versucht, und die Anschaffungskosten würden dies widerspiegeln. Wenn wir dieses Spiel spielen wollten, dann müssten wir irgendwie in der Lage sein, zukünftige Erfolge effektiver als andere zu identifizieren

   Im Vergleich dazu, wenn man ein Produkt zu einem Versorgungsunternehmen bringt, dann war die Komponente bereits recht gut bekannt. Es war definiert, es gab einen bestehenden Markt, aber ja, es würde Trägheit geben. Ich erkannte, dass es eine Verbindung zwischen den beiden gab und wir auf der Antwort saßen. Unsere Pionier-Siedler-Stadtplaner-Struktur hatte uns in die Lage versetzt, die Entwicklung zu bewältigen und die beiden Extreme zu verbinden. Die Rolle des Siedlers bestand einfach darin, zukünftige Erfolgsmuster zu identifizieren und durch die Verfeinerung eines Produkts oder einer Bibliothekskomponente daraus zu lernen. Im Jahr 2005 bezeichneten wir unsere Siedler tatsächlich als das Framework-Team, und ihr Erfolg kam aus dem Verständnis der Muster innerhalb dessen, was die Pioniere - unser Entwicklungsteam - aufgebaut hatten. Die Pioniere waren unsere Glücksspieler

   Was aber, wenn nicht wir, sondern andere Unternehmen unsere Pioniere wären? Könnten unsere Siedler in all dem Lärm erfolgreiche Muster entdecken? Das Problem war natürlich, wo würden wir suchen? Wie jeder Produktanbieter könnten wir eine Marketingumfrage durchführen, um herauszufinden, wie die Leute unsere Komponenten nutzen, aber das schien langsam und umständlich. Glücklicherweise gab uns unser Online-Fotoservice die Antwort

   Zwischen 2003 und 2005 hatten wir Teile des Fotodienstes durch URL-Anfragen und APIs für andere zugänglich gemacht. Es war kein großer Sprung zu erkennen, dass wir, wenn wir die Nutzung unserer APIs überwachen würden, dies nutzen könnten, um in Echtzeit zu erkennen, welche anderen Unternehmen erfolgreich sind, ohne auf langsame und teure Marketingumfragen zurückgreifen zu müssen. Dies führte zum innovate - leverage - commoditse (ILC) Modell. Ursprünglich nannte ich dies innovate - transition - commoditise und ich schulde Mark Thompson ein Dankeschön dafür, dass er mich überredete, transition in etwas Sinnvolleres zu ändern. Das ILC-Modell ist in Abbildung 55 beschrieben und wir werden seine Funktionsweise durchgehen
Siehe    Abbildung 55: ILC (innovate, leverage and commoditise) für mehr Details.

   Nehmen Sie ein bestehendes Produkt, das relativ gut definiert und alltäglich ist, und machen Sie daraus ein industrialisiertes Dienstprogramm (Punkt A1 bis A2). Dieses Dienstprogramm sollte als einfach zu verwendende API offengelegt werden. Dann ermutigen und befähigen Sie andere Unternehmen zur Innovation, indem Sie auf Ihrem Dienstprogramm aufbauen (Punkt B1). Sie können dies tun, indem Sie ihre Agilität erhöhen und ihre Fehlerkosten reduzieren, was beides durch ein Dienstprogramm ermöglicht wird. Diese Unternehmen, die auf Ihrem Dienstprogramm aufbauen, sind Ihre "externen" Pioniere oder das, was wir gemeinhin ein "Ökosystem" nennen.

   Je mehr Unternehmen auf Ihrem Dienstprogramm aufbauen (d. h. je größer Ihr Ökosystem ist), desto mehr Dinge werden Ihre "externen" Pioniere bauen und desto größer ist die Bandbreite an neuen Innovationen. Ihr "externes" Ökosystem ist in der Tat Ihr zukünftiger Sensormotor. Durch die Überwachung von Metadaten, wie z. B. dem Verbrauch Ihrer Versorgungsdienste, können Sie feststellen, was sich durchsetzt. Es ist wichtig zu beachten, dass Sie nicht die Daten dieser "externen" Unternehmen untersuchen müssen, sondern nur die Metadaten, so dass Sie Sicherheitsbedenken mit zukünftigem Sensing ausgleichen können. Sie sollten diese Metadaten nutzen, um neue Muster zu identifizieren, die sich für die Bereitstellung als industrialisierte Komponenten eignen (B1 bis B2). Sobald Sie ein zukünftiges Muster identifiziert haben, sollten Sie es zu einem diskreten Komponentendienst industrialisieren (B3), der als Dienstprogramm bereitgestellt und über eine API zugänglich gemacht wird. Sie stellen nun mehrere
   Komponenten (A2, B3) in einer ständig wachsenden Plattform von Komponentendiensten bereit, auf denen andere aufbauen können (C1). Sie wiederholen dann diesen Kreislauf

   Natürlich könnten Unternehmen in jedem Bereich, den Sie gerade industrialisiert haben (B2 bis B3), murren - "die haben unser Geschäftsmodell aufgefressen" - also müssen Sie sorgfältig zwischen Akquisition und Implementierung abwägen. Je mehr Komponentendienste Sie in Ihrer Plattform anbieten, desto attraktiver wird sie für andere. Sie müssen dieses Ökosystem wie ein Gärtner verwalten, der neue Pflanzen ("externe Unternehmen") zum Wachsen anregt und darauf achtet, nicht zu viel zu ernten. Beachten Sie, dass dadurch eine sich ständig erweiternde Plattform im Sinne einer losen Ansammlung diskreter Komponentendienste (z. B. Storage, Compute, Datenbank) entsteht, die sich von einer Code-Ausführungsplattform (d. h. einem Framework, in dem Sie Code schreiben) unterscheidet

   Das ILC-Modell hat eine gewisse subtile Schönheit. Wenn wir unser Ökosystem als die Unternehmen betrachten, die auf unseren diskreten Komponentendiensten aufbauen, dann ist das Ökosystem umso größer:      * je größer die Skaleneffekte bei unseren zugrunde liegenden Komponenten
     * je mehr Metadaten vorhanden sind, um zukünftige Muster zu erkennen
     * desto breiter ist der Umfang der darauf aufbauenden innovativen Komponenten und damit auch die zukünftige Umgebung, die wir scannen können

   Dies führt dazu, dass wir zunehmend den Anschein erwecken, hocheffizient zu sein, da wir Komponenten zu Warenformen mit Skaleneffekten industrialisieren, aber auch hochgradig kundenorientiert, da wir Metadaten ausnutzen, um Muster zu finden, die andere wollen. Schließlich werden andere uns durch die Innovation anderer als hoch innovativ ansehen. All diese wünschenswerten Eigenschaften werden mit der Größe des Ökosystems zunehmen, solange wir die Metadaten auswerten und als effektiver Gärtner agieren

   Ständig der First Mover bei der Industrialisierung einer Komponente zu sein, bietet einen enormen Vorteil, der es uns ermöglicht, effektiv ein Fast Follower für zukünftigen Erfolg und Wohlstand zu sein. Je größer das Ökosystem ist, das wir aufbauen, desto stärker werden die Vorteile. Es gibt hier einen Netzwerkeffekt, und dieses Modell stand in krassem Gegensatz zu dem, was mir gesagt worden war - dass man ein Fast Follower sein sollte und dass man hoch innovativ, effizient oder kundenorientiert sein könnte. Als ich mir die Karte ansah, wusste ich, dass ich mit ein bisschen Taschenspielertrick den Eindruck erwecken konnte, dass ich alle drei Ziele erreiche, indem ich ein First Mover bei der Industrialisierung und ein Fast Follower beim Erschließen des Unbekannten bin. Normalerweise stelle ich diese besondere Form des Ökosystemmodells (es gibt viele verschiedene Formen) mit einer Reihe von konzentrischen Kreisen dar. Ich habe die obige Abbildung 55 in eine solche Kreisform transponiert und
   einige Anmerkungen hinzugefügt, siehe Abbildung 56. In dieser Welt schieben Sie Ihre "Pioniere" außerhalb der Organisation, indem Sie anderen Unternehmen erlauben, Ihre Pioniere zu sein
Siehe    Abbildung 56: Kreisförmige Ansicht des ILC für mehr Details.

