Kapitel 8.3.1.: Wertbasierte Entwicklung

   Im Jahr 2003 baute und betrieb das Unternehmen, das ich leitete, kleine Systeme für andere. Es gab keine großen Systeme, diese waren eher in der Größenordnung von £100k - £2M und deckten ein paar Millionen Benutzer ab. Unsere Kunden wollten in der Regel eine detaillierte Spezifikation darüber erstellen, was sie genau brauchten, um sicherzustellen, dass wir liefern. Das hört sich nicht schlecht an, aber selbst in diesem kleinen Maßstab befanden sich einige der Komponenten in diesen Projekten im unerforschten Raum und daher wusste niemand genau, was gewünscht wurde. Leider hatte ich damals nicht die Sprache, um das zu erklären. Daher bauten und betrieben wir die Systeme und hatten zwangsläufig einige Spannungen wegen der Änderungskontrolle und Streitigkeiten darüber, welche Funktion in einem bestimmten Vertrag enthalten war oder nicht

   Während einer dieser Diskussionen wies ich den Kunden darauf hin, dass wir um einen Tisch saßen und uns über ein Stück Papier stritten, aber keiner von uns darüber sprach, was die Anwender brauchten. Der Vertrag war hier nicht wirklich der Kunde, sondern die Endanwender des Kunden. Wir mussten diese Diskussion ändern und uns auf den Endbenutzer konzentrieren. Ich schlug vor, dass wir eine Wertmetrik erstellen sollten, die auf dem Endbenutzer basiert, etwas, auf das wir beide hinarbeiten könnten. Die Idee stieß auf taube Ohren, da der Kunde mit dem Vertrag beschäftigt war, aber zumindest war der Samen gepflanzt. Es dauerte nicht lange, bis ein anderes Projekt die Gelegenheit bot, diese Idee zu testen. Der Kunde gab mir eine Spezifikation und fragte, wie viel es kosten würde, sie zu bauen Ich antwortete - "Wie klingt kostenlos?"

   Sie waren etwas schockiert, aber dann fügte ich hinzu "Allerdings müssen wir für den Betrieb des Systems bezahlt werden. Wir müssen ein Maß für den Wert oder den Wert bestimmen, und ich werde dafür bezahlt". Es gab ein bisschen "um" und "ah", aber schließlich einigten wir uns darauf, eine Methode der wertorientierten Entwicklung auszuprobieren

   In diesem Fall war es das Ziel des Systems, Leads für eine teure Reihe von Großformatdruckern (LFPs) zu liefern. Der Kunde wollte mehr Leads. Seine potenziellen Endbenutzer wollten eine Möglichkeit, mehr über diese Drucker zu erfahren und sie zu testen. Ich würde etwas bauen, das diese beiden unterschiedlichen Anforderungen miteinander verbindet. Aber anstatt dass der Kunde im Voraus bezahlt und das gesamte Risiko trägt, würde ich es kostenlos entwickeln und eine Gebühr für jeden neu erzeugten Lead nehmen

   Wir (d. h. der Kunde und mein Unternehmen) konzentrierten uns nicht mehr darauf, was in einem Vertrag drin oder draußen war, sondern auf eine einzige Aufgabe, nämlich mehr Leads zu generieren. Wir hatten beide einen Anreiz dafür. Ich hatte auch einen neuen Anreiz für Kosteneffizienz, denn je effizienter ich das System machte, desto mehr Gewinn blieb mir. Wir wurden uns einig und so baute und betrieb ich ein System, das es den Kunden ermöglichte, ein Bild hochzuladen, es auf einem Großformatdrucker zu testen und die Lieferung ihres Drucks plus Informationen über die Leistung des Kits plus einen Verkaufsanruf zu erhalten. Das System florierte

   In drei Monaten hatten wir mehr Leads generiert, als der Kunde normalerweise in einem Jahr hatte, und das wurde immer schneller. Es war atemberaubend. Der Umsatz des Kunden schoss in die Höhe, aber auch mein Umsatz, da das System auf einer Metrik von Leads basierte. Je mehr Erfolg sie hatten, desto mehr Erfolg hatte ich. Es war eine Win-Win-Situation, so dachte ich zumindest. Leider führte dies zu zwei Problemen und einem Kopfschmerz

   Die Probleme wurden dadurch verursacht, dass der Kunde auf dieses Interesse nicht vorbereitet war und die internen Budgetierungssysteme nicht für einen so variablen Erfolg ausgelegt waren. Was hat die Budgetierung damit zu tun? Nun, für den Kunden bedeutete der Erfolg mehr Leads, was sich in mehr Umsatz niederschlug. Das war aus Sicht der Budgetierung gut. Aber je mehr Erfolg der Kunde hatte, desto mehr stieg mein Honorar, da es auch auf Leads basierte. Das war aus Sicht der Budgetierung schlecht. Das System wurde so erfolgreich, dass es ein internes Budget überschritt, das der Kunde für die Kosten festgelegt hatte, und dies führte zu einem internen Konflikt mit der Forderung, das System abzuschalten, bis ein neues Budget zugewiesen wurde (ein sehr langwieriger Prozess). Ein umsatzbringendes System abschalten, weil es besser läuft als erwartet und eine willkürliche Budgetzahl überschritten hat? Das ist es, was passiert, wenn eine unflexible Einheitsgröße für die Budgetierung auf die
   Realität trifft

   Bevor Sie jetzt sagen: "Das ist doch albern" - eigentlich ist es das nicht. Im Laufe der Zeit neigen Unternehmen dazu, einen Korpus an Arbeit und Prozessen - den Unternehmenskorpus - aufzubauen, der dazu dient, vergangene Misserfolge zu verhindern. Das geschieht alles mit vernünftigen Absichten. Der Wunsch, Geld effektiv auszugeben und der Wunsch, zu wissen, dass die Ressourcen gut genutzt werden. Diese Masse an guten Absichten sind oft die Ursache für viele Probleme, wenn man versucht, das System zu verändern. Dieser Korpus kann zu einer Leiche werden, einem Zombie, der Innovationen abtötet, wann immer man sie findet. Ich hatte versucht, das System zu verändern, indem ich einen wertorientierten Ansatz einführte, und ich hätte wissen müssen, dass dies zu Spannungen mit dem Korpus, in diesem Fall dem Budgetierungssystem, führen würde. Diese Lektion habe ich schnell gelernt

   Ich habe in den letzten zehn Jahren oft wertorientierte Ansätze (oft auch "Outcome" genannt) verwendet, und ich bevorzuge sie sogar. Während sie dazu neigen, das Problem einer übermäßigen Fokussierung auf Verträge zu lösen, sind sie immer auf andere Hindernisse gestoßen, wie z. B., dass ein Kunde nicht in der Lage war, eine Metrik des Wertes oder den Zweck des Systems zu beschreiben oder sogar Konflikte und Politik innerhalb interner Prozesse. Dessen müssen Sie sich bewusst sein und es abmildern

   Neben Problemen wie der mangelnden Vorbereitung auf den Nachfrageschub oder den Firmenkorpus gab es auch die Kopfschmerzen, die dieser wertorientierte Ansatz verursachte. Dies war meine Migräne. Es war ein gewisses finanzielles Risiko mit diesem Projekt verbunden und es waren einige Investitionen erforderlich. Ich musste mich nicht nur um die Entwicklung, sondern auch um den Betrieb kümmern. Das beinhaltete eine Menge Kapitalinvestitionen zusammen mit Kosten, die entweder nicht wirklich variabel waren oder solche, die ich nur erahnen konnte. Um das Risiko zu minimieren, teilten wir uns gemeinsame Komponenten mit anderen Projekten, aber in einer großen, heterogenen Anwendungsumgebung verkompliziert das nur die Zuordnung der Kosten. Die Frage, wie viel uns ein Benutzer, der unsere Anwendung besucht, in Bezug auf Rechenleistung, Stromverbrauch und Nutzung des Rechenzentrums kosten würde, war eine unglaublich schwierige Frage

   In meinen Risikomodellen hatte ich auch keine klare Möglichkeit, die Betriebskosten bei der Skalierung zu bestimmen. Ich musste viele Schätzungen über schrittweise Änderungen vornehmen und darüber, wie viele Rechenressourcen von einer Anwendung genutzt werden würden, die noch nicht gebaut worden war. Das Finanzmodell glich eher einer Kunst als einer Wissenschaft. Ein Teil dieser Ungewissheit landete als "Polster" in der Metrik, z. B. der Preis pro Lead, den ich berechnen würde. Glücklicherweise hatten andere Bereiche bessere Kostenmodelle. Im obigen LFP-Beispiel waren die Vertriebssysteme und sogar der Druck variabler (d. h. Preis pro Abzug oder Preis pro Paket), weil wir Erfahrung mit dem Betrieb eines Online-Foto- und Druckdienstes hatten. Das bringt mich zum nächsten Thema der Preisgranularität.

