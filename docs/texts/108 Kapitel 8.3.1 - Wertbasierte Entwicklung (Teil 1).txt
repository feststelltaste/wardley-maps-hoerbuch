Kapitel 8.3.1.: Wertbasierte Entwicklung

   Im Jahr 2003 baute und betrieb das Unternehmen, das ich leitete, kleine Systeme für andere. Es gab keine großen Systeme, diese waren eher in der Größenordnung von £100k - £2M und deckten ein paar Millionen Benutzer ab. Unsere Kunden wollten in der Regel eine detaillierte Spezifikation darüber erstellen, was sie genau brauchten, um sicherzustellen, dass wir liefern. Das hört sich nicht schlecht an, aber selbst in diesem kleinen Maßstab befanden sich einige der Komponenten in diesen Projekten im unerforschten Raum und daher wusste niemand genau, was gewünscht wurde. Leider hatte ich damals nicht die Sprache, um das zu erklären. Daher bauten und betrieben wir die Systeme und hatten zwangsläufig einige Spannungen wegen der Änderungskontrolle und Streitigkeiten darüber, welche Funktion in einem bestimmten Vertrag enthalten war oder nicht

   Während einer dieser Diskussionen wies ich den Kunden darauf hin, dass wir um einen Tisch saßen und uns über ein Stück Papier stritten, aber keiner von uns darüber sprach, was die Anwender brauchten. Der Vertrag war hier nicht wirklich der Kunde, sondern die Endanwender des Kunden. Wir mussten diese Diskussion ändern und uns auf den Endbenutzer konzentrieren. Ich schlug vor, dass wir eine Wertmetrik erstellen sollten, die auf dem Endbenutzer basiert, etwas, auf das wir beide hinarbeiten könnten. Die Idee stieß auf taube Ohren, da der Kunde mit dem Vertrag beschäftigt war, aber zumindest war der Samen gepflanzt. Es dauerte nicht lange, bis ein anderes Projekt die Gelegenheit bot, diese Idee zu testen. Der Kunde gab mir eine Spezifikation und fragte, wie viel es kosten würde, sie zu bauen Ich antwortete - "Wie klingt kostenlos?"

   Sie waren etwas schockiert, aber dann fügte ich hinzu "Allerdings müssen wir für den Betrieb des Systems bezahlt werden. Wir müssen ein Maß für den Wert oder den Wert bestimmen, und ich werde dafür bezahlt". Es gab ein bisschen "um" und "ah", aber schließlich einigten wir uns darauf, eine Methode der wertorientierten Entwicklung auszuprobieren

   In diesem Fall war es das Ziel des Systems, Leads für eine teure Reihe von Großformatdruckern (LFPs) zu liefern. Der Kunde wollte mehr Leads. Seine potenziellen Endbenutzer wollten eine Möglichkeit, mehr über diese Drucker zu erfahren und sie zu testen. Ich würde etwas bauen, das diese beiden unterschiedlichen Anforderungen miteinander verbindet. Aber anstatt dass der Kunde im Voraus bezahlt und das gesamte Risiko trägt, würde ich es kostenlos entwickeln und eine Gebühr für jeden neu erzeugten Lead nehmen

   Wir (d. h. der Kunde und mein Unternehmen) konzentrierten uns nicht mehr darauf, was in einem Vertrag drin oder draußen war, sondern auf eine einzige Aufgabe, nämlich mehr Leads zu generieren. Wir hatten beide einen Anreiz dafür. Ich hatte auch einen neuen Anreiz für Kosteneffizienz, denn je effizienter ich das System machte, desto mehr Gewinn blieb mir. Wir wurden uns einig und so baute und betrieb ich ein System, das es den Kunden ermöglichte, ein Bild hochzuladen, es auf einem Großformatdrucker zu testen und die Lieferung ihres Drucks plus Informationen über die Leistung des Kits plus einen Verkaufsanruf zu erhalten. Das System florierte

   In drei Monaten hatten wir mehr Leads generiert, als der Kunde normalerweise in einem Jahr hatte, und das wurde immer schneller. Es war atemberaubend. Der Umsatz des Kunden schoss in die Höhe, aber auch mein Umsatz, da das System auf einer Metrik von Leads basierte. Je mehr Erfolg sie hatten, desto mehr Erfolg hatte ich. Es war eine Win-Win-Situation, so dachte ich zumindest. Leider führte dies zu zwei Problemen und einem Kopfschmerz

   Die Probleme wurden dadurch verursacht, dass der Kunde auf dieses Interesse nicht vorbereitet war und die internen Budgetierungssysteme nicht für einen so variablen Erfolg ausgelegt waren. Was hat die Budgetierung damit zu tun? Nun, für den Kunden bedeutete der Erfolg mehr Leads, was sich in mehr Umsatz niederschlug. Das war aus Sicht der Budgetierung gut. Aber je mehr Erfolg der Kunde hatte, desto mehr stieg mein Honorar, da es auch auf Leads basierte. Das war aus Sicht der Budgetierung schlecht. Das System wurde so erfolgreich, dass es ein internes Budget überschritt, das der Kunde für die Kosten festgelegt hatte, und dies führte zu einem internen Konflikt mit der Forderung, das System abzuschalten, bis ein neues Budget zugewiesen wurde (ein sehr langwieriger Prozess). Ein umsatzbringendes System abschalten, weil es besser läuft als erwartet und eine willkürliche Budgetzahl überschritten hat? Das ist es, was passiert, wenn eine unflexible Einheitsgröße für die Budgetierung auf die
   Realität trifft

